name: 'install-zig'
description: 'Install zig compiler and make it available in PATH.'

inputs:
  sudo:
    description: 'Specify a sudo command. Put it empty when sudo is not available.'
    required: false
    default: 'sudo'

runs:
  using: "composite"
  steps:
    # TODO: this is only needed because we are using a development version of zig,
    # since we need https://github.com/ziglang/zig/pull/21253 to be included.
    # Development versions of zig are not kept alive forever, but get overridden.
    # We cache it to keep it alive.
    - name: Download zig (cached)
      id: cache-zig
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: /usr/local/zig
        key: zig-${{ runner.os }}-${{ runner.arch }}

    - name: Download zig
      if: steps.cache-zig.outputs.cache-hit != 'true'
      shell: bash
      env:
        ZIG_VERSION: '0.14.0-dev.1588+2111f4c38'
      run: |
        curl -L -o zig.tar.xz https://ziglang.org/builds/zig-linux-$(uname -m)-${ZIG_VERSION}.tar.xz
        tar -xvf zig.tar.xz

        cat > zig-linux-$(uname -m)-${ZIG_VERSION}/zig-cc <<EOF
        #!/bin/bash
        exec zig cc -target $(uname -m)-linux-gnu.2.17 -mcpu=baseline "\$@"
        EOF
        chmod +x zig-linux-$(uname -m)-${ZIG_VERSION}/zig-cc

        cat > zig-linux-$(uname -m)-${ZIG_VERSION}/zig-c++ <<EOF
        #!/bin/bash
        exec zig c++ -target $(uname -m)-linux-gnu.2.17 -mcpu=baseline "\$@"
        EOF
        chmod +x zig-linux-$(uname -m)-${ZIG_VERSION}/zig-c++

        ${{ inputs.sudo }} mkdir -p /usr/local/zig/
        ${{ inputs.sudo }} cp -R zig-linux-$(uname -m)-${ZIG_VERSION}/* /usr/local/zig/

    - name: Setup zig
      shell: bash
      id: zig
      run: |
        echo "/usr/local/zig" >> $GITHUB_PATH
        echo "CC=zig-cc" >> $GITHUB_ENV
        echo "CXX=zig-c++" >> $GITHUB_ENV
        echo "AR=zig ar" >> $GITHUB_ENV
        echo "RANLIB=zig ranlib" >> $GITHUB_ENV