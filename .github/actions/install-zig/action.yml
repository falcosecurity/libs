name: 'install-zig'
description: 'Install zig compiler and make it available in PATH.'

inputs:
  zig_download_retries:
    description: 'Number of retries for the download'
    required: false
    default: 20

runs:
  using: "composite"
  steps:
    - name: Store zig version as local output
      shell: bash
      id: store
      env:
        ZIG_VERSION: '0.15.1'
      run: |
        echo "zig_version=${ZIG_VERSION}" >> "$GITHUB_OUTPUT"

    - name: Download zig
      shell: bash
      run: |
        wget --tries=${{ inputs.zig_download_retries }} -O zig.tar.xz https://ziglang.org/download/${{ steps.store.outputs.zig_version }}/zig-$(uname -m)-linux-${{ steps.store.outputs.zig_version }}.tar.xz
        tar -xvf zig.tar.xz

        cat > zig-$(uname -m)-linux-${{ steps.store.outputs.zig_version }}/zig-cc <<EOF
        #!/bin/bash
        exec zig cc -target $(uname -m)-linux-gnu.2.17 -mcpu=baseline "\$@"
        EOF
        chmod +x zig-$(uname -m)-linux-${{ steps.store.outputs.zig_version }}/zig-cc

        cat > zig-$(uname -m)-linux-${{ steps.store.outputs.zig_version }}/zig-c++ <<EOF
        #!/bin/bash
        exec zig c++ -target $(uname -m)-linux-gnu.2.17 -mcpu=baseline "\$@"
        EOF
        chmod +x zig-$(uname -m)-linux-${{ steps.store.outputs.zig_version }}/zig-c++

        mv zig-$(uname -m)-linux-${{ steps.store.outputs.zig_version }}/ zig

    - name: Setup zig
      shell: bash
      id: zig
      run: |
        echo "$(pwd)/zig" >> $GITHUB_PATH
        echo "CC=zig-cc" >> $GITHUB_ENV
        echo "CXX=zig-c++" >> $GITHUB_ENV
        echo "AR=zig ar" >> $GITHUB_ENV
        echo "RANLIB=zig ranlib" >> $GITHUB_ENV
