name: Test drivers against a matrix of kernels/distros

on:
  workflow_dispatch:
    inputs:
      libsversion:
        description: 'libs version to be tested, eg: master'
        type: string
        required: false
        default: 'master'
      libsrepo:
        description: 'libs repo to be tested, eg: falcosecurity/libs'
        type: string
        required: false
        default: 'falcosecurity/libs'
  workflow_call:
    inputs:
      libsversion:
        description: 'libs version to be tested, eg: master'
        type: string
        required: false
        default: 'master'
      libsrepo:
        description: 'libs repo to be tested, eg: falcosecurity/libs'
        type: string
        required: false
        default: 'falcosecurity/libs'

concurrency:
  group: kernel-tests
  cancel-in-progress: false

jobs:
  test-kernels:
    strategy:
      fail-fast: false
      matrix:
        architecture: [X64, ARM64]
    runs-on: [ "self-hosted", "linux", "${{matrix.architecture}}" ]
    steps:
      - uses: falcosecurity/kernel-testing@f8f0b498e3d2b08e70b8e82f55447ff84f9c43b2 # v0.3.2
        id: kernel_tests
        with:
          libsversion: ${{ inputs.libsversion }}
          libsrepo: ${{ inputs.libsrepo }}
          build_matrix: 'true'

      - uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        with:
          name: ansible_output_${{matrix.architecture}}
          path: ${{ steps.kernel_tests.outputs.ansible_output }}

      - uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        with:
          name: matrix_${{matrix.architecture}}
          path: ${{ steps.kernel_tests.outputs.matrix_output }}
