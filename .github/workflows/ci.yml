name: CI Build
on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build-libs:
    runs-on: ubuntu-latest
    container:
      image: debian:buster
    steps:
      - name: Checkout Libs
        uses: actions/checkout@v3
        
      - name: Install deps
        run: |
          apt update && apt install -y --no-install-recommends ca-certificates cmake build-essential clang llvm git pkg-config autoconf automake libtool libelf-dev wget libb64-dev libc-ares-dev libcurl4-openssl-dev libssl-dev libtbb-dev libjq-dev libjsoncpp-dev libgrpc++-dev protobuf-compiler-grpc libgtest-dev libprotobuf-dev linux-headers-amd64
  
      - name: Build and test
        run: |
          mkdir -p build
          cd build && cmake -DBUILD_BPF=On -DUSE_BUNDLED_DEPS=False ../
          KERNELDIR=/lib/modules/$(ls /lib/modules)/build make -j4
          make run-unit-tests
        
  build-libs-bundled-deps:
    runs-on: ubuntu-latest
    container:
      image: debian:buster
    steps:
      - name: Checkout Libs
        uses: actions/checkout@v3
        
      - name: Install deps
        run: |
          apt update && apt install -y --no-install-recommends ca-certificates cmake build-essential clang llvm git pkg-config autoconf automake libtool libelf-dev wget libb64-dev libc-ares-dev libcurl4-openssl-dev libssl-dev libtbb-dev libjq-dev libjsoncpp-dev libgrpc++-dev protobuf-compiler-grpc libgtest-dev libprotobuf-dev linux-headers-amd64
  
      - name: Build and test
        run: |
          mkdir -p build
          cd build && cmake -DBUILD_BPF=On -DUSE_BUNDLED_DEPS=True ../
          KERNELDIR=/lib/modules/$(ls /lib/modules)/build make -j4
          make run-unit-tests
        
  build-libs-with-chisels:
    runs-on: ubuntu-latest
    container:
      image: debian:buster
    steps:
      - name: Checkout Libs
        uses: actions/checkout@v3
        
      - name: Install deps
        run: |
          apt update && apt install -y --no-install-recommends ca-certificates cmake build-essential clang llvm git pkg-config autoconf automake libtool libelf-dev wget libb64-dev libc-ares-dev libcurl4-openssl-dev libssl-dev libtbb-dev libjq-dev libjsoncpp-dev libgrpc++-dev protobuf-compiler-grpc libgtest-dev libprotobuf-dev linux-headers-amd64
  
      - name: Build and test
        run: |
          mkdir -p build
          cd build && cmake -DBUILD_BPF=On -DWITH_CHISEL=True ../
          KERNELDIR=/lib/modules/$(ls /lib/modules)/build make -j4
          make run-unit-tests
        
  build-libs-minimal:
    runs-on: ubuntu-latest
    container:
      image: debian:buster
    steps:
      - name: Checkout Libs
        uses: actions/checkout@v3
        
      - name: Install deps
        run: |
          apt update && apt install -y --no-install-recommends ca-certificates cmake build-essential clang llvm git pkg-config autoconf automake libtool libelf-dev wget libb64-dev libc-ares-dev libcurl4-openssl-dev libssl-dev libtbb-dev libjq-dev libjsoncpp-dev libgrpc++-dev protobuf-compiler-grpc libgtest-dev libprotobuf-dev linux-headers-amd64
  
      - name: Build and test
        run: |
          mkdir -p build
          cd build && cmake -DMINIMAL_BUILD=True ../
          KERNELDIR=/lib/modules/$(ls /lib/modules)/build make -j4
          make run-unit-tests
          
  build-libs-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Libs
        uses: actions/checkout@v3

      - uses: uraimo/run-on-arch-action@v2.2.0
        name: Run aarch64 build
        with:
          arch: aarch64
          distro: buster
          githubToken: ${{ github.token }}

          install: |
            apt update && apt install -y --no-install-recommends ca-certificates cmake build-essential clang llvm git pkg-config autoconf automake libtool libelf-dev wget libb64-dev libc-ares-dev libcurl4-openssl-dev libssl-dev libtbb-dev libjq-dev libjsoncpp-dev libgrpc++-dev protobuf-compiler-grpc libgtest-dev libprotobuf-dev linux-headers-arm64
            
          run: |
            mkdir -p build
            cd build && cmake -DBUILD_BPF=On -DUSE_BUNDLED_DEPS=False ../
            KERNELDIR=/lib/modules/$(ls /lib/modules)/build make -j4
            make run-unit-tests
            
  build-libs-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Libs
        uses: actions/checkout@v3

      - name: Configure
        run: |
          mkdir -p build
          cd build && cmake ..
  
      - name: Build
        run: cd build && cmake --build .
        
  build-libs-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Libs
        uses: actions/checkout@v3

      - name: Configure
        run: |
          mkdir -p build
          cd build && cmake -DCREATE_TEST_TARGETS=OFF ..
  
      - name: Build
        run: cd build && cmake --build .
