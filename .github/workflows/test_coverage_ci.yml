name: Test Coverage CI
on:
  pull_request:
  push:
    branches:
      - master

# Checks if any concurrent jobs under the same pull request or branch are being executed
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  unit-test-libsinsp-coverage:
    name: unit-test-libsinsp-coverage üßê
    runs-on: 'ubuntu-22.04'
    container:
      image: debian:bookworm
    steps:
      - name: Install deps ‚õìÔ∏è
        run: |
          apt update && apt install -y --no-install-recommends ca-certificates \
            cmake build-essential git clang llvm pkg-config autoconf automake \
            libtool libelf-dev wget libc-ares-dev libcurl4-openssl-dev libssl-dev \
            libtbb-dev libjq-dev libjsoncpp-dev libgrpc++-dev protobuf-compiler-grpc \
            libgtest-dev libprotobuf-dev linux-headers-amd64 \
            gpg gpg-agent gcovr

      - name: Checkout Libs ‚§µÔ∏è
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install deps ‚õìÔ∏è
        run: |
          .github/install-deps.sh

      - name: Git safe directory
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Build and test üèóÔ∏èüß™
        run: |
          mkdir -p build
          cd build && cmake -DBUILD_WARNINGS_AS_ERRORS=True -DENABLE_COVERAGE=True -DUSE_BUNDLED_DEPS=False ../
          KERNELDIR=/lib/modules/$(ls /lib/modules)/build make -j4
          make run-unit-tests

      - name: Generate libsinsp coverage report
        run: |
          gcovr --xml -o ./libsinsp.coverage.xml

      - name: Upload to codecov
        uses: codecov/codecov-action@015f24e6818733317a2da2edd6290ab26238649a # v5.0.7
        with:
          fail_ci_if_error: true
          files: ./libsinsp.coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          flags: libsinsp
