name: Run libs e2e tests python framework

on:
  workflow_call:
    inputs:
      container_plugin_artifact_name:
        description: 'use a previously built custom container plugin; artifact name to be downloaded, or empty'
        type: string
        required: false
        default: ''
      test-docker:
        description: "Whether to run tests with docker socket"
        type: boolean
        required: false
        default: true
      test-podman:
        description: "Whether to run tests with podman socket"
        type: boolean
        required: false
        default: true
      libsversion:
        description: 'libs version to be tested, eg: master'
        type: string
        required: false
        default: 'master'
      libsrepo:
        description: 'libs repo to be tested, eg: falcosecurity/libs'
        type: string
        required: false
        default: 'falcosecurity/libs'

jobs:
  test-e2e:
    if: inputs.test-docker || inputs.test-podman
    strategy:
      fail-fast: false
      matrix:
        name: [ system_deps, bundled_deps, asan ]
        include:
          - name: system_deps
            cmake_opts: -DUSE_BUNDLED_DEPS=False
          - name: bundled_deps
            cmake_opts: -DUSE_BUNDLED_DEPS=True
          - name: asan
            cmake_opts: -DUSE_ASAN=True -DUSE_BUNDLED_DEPS=True -DCMAKE_C_FLAGS=-fsanitize=address -DCMAKE_CXX_FLAGS=-fsanitize=address
    runs-on: ubuntu-24.04
    steps:
      - name: Install deps ‚õìÔ∏è
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
            ca-certificates \
            cmake \
            build-essential \
            git \
            clang \
            llvm \
            pkg-config \
            autoconf \
            automake \
            libtool \
            libelf-dev \
            wget \
            libbpf-dev \
            libcap-dev \
            libtbb-dev \
            libjq-dev \
            libjsoncpp-dev \
            libgtest-dev \
            libprotobuf-dev \
            protobuf-compiler \
            "linux-headers-$(uname -r)"

      - name: Checkout Libs ‚§µÔ∏è
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          repository: ${{ inputs.libsrepo }}
          ref: ${{ inputs.libsversion }}

      - name: Install deps ‚õìÔ∏è
        run: |
          sudo .github/install-deps.sh

      - name: Build tests üèóÔ∏è
        run: |
          mkdir -p build && cd build
          cmake -DBUILD_BPF=ON \
                -DBUILD_LIBSCAP_MODERN_BPF=ON \
                -DBUILD_LIBSCAP_GVISOR=OFF \
                -DENABLE_E2E_TESTS=ON \
                ${{ matrix.cmake_opts }} \
                -DUSE_BUNDLED_LIBBPF=ON \
                ..
          make -j$(nproc) sinsp-example driver bpf container_plugin
          sudo -E make e2e-install-deps

      - name: Download overriding custom container plugin
        if: inputs.container_plugin_artifact_name != ''
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: ${{ inputs.container_plugin_artifact_name }}
          path: build/test/e2e/container_plugin-prefix/src/container_plugin/

      - name: Run tests - docker üß™
        if: inputs.test-docker
        working-directory: build
        run: |
          sudo -E ../test/e2e/scripts/run_tests.sh

      - name: Archive test reports - docker
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: inputs.test-docker && failure()
        with:
          name: ${{ matrix.name }}_docker_report
          path: |
            /tmp/report/

      - name: Run tests - podman üß™
        if: inputs.test-podman && always()
        working-directory: build
        env:
          # Set DOCKER_HOST pointing to podman socket
          DOCKER_HOST: unix://run/podman/podman.sock
        run: |
          # Cleanup docker tests generated report folder
          sudo rm -rf /tmp/report
          # Podman tests require podman socket
          sudo systemctl start podman
          sudo -E ../test/e2e/scripts/run_tests.sh

      - name: Archive test reports - podman
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: inputs.test-podman && failure()
        with:
          name: ${{ matrix.name }}_podman_report
          path: |
            /tmp/report/